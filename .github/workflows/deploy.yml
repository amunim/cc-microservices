name: Deploy Microservices to Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: gold-obelisk-445820-s5
      REGION: us-central1
      KUBECONFIG_PATH: /tmp/kubeconfig

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Kubernetes Access
        run: |
          echo "Configuring Kubernetes access..."
          gcloud container clusters get-credentials microservices-cluster --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Deploy Secrets to Kubernetes
        run: |
          echo "Deploying secrets..."
          kubectl create secret generic service-secrets \
            --from-literal=mongo-uri=${{ secrets.MONGO_URI }} \
            --from-literal=jwt-secret=${{ secrets.JWT_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy UsageMntrServ
        run: |
          echo "Deploying UsageMntrServ..."
          kubectl apply -f UsageMntrServ/usagemntrserv-deployment.yaml
          kubectl apply -f UsageMntrServ/usagemntrserv-service.yaml

      - name: Get UsageMntrServ External URL
        id: usagemntrserv_url
        run: |
          echo "Fetching external URL for UsageMntrServ..."
          USAGE_MNTR_URL=$(kubectl get svc usagemntrserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "USAGE_MNTR_URL=http://$USAGE_MNTR_URL" >> $GITHUB_ENV
          echo "::set-output name=usagemntr_url::$USAGE_MNTR_URL"

      - name: Deploy UserAccMgmtServ
        run: |
          echo "Deploying UserAccMgmtServ..."
          kubectl apply -f UserAccMgmtServ/useraccmgmtserv-deployment.yaml
          kubectl apply -f UserAccMgmtServ/useraccmgmtserv-service.yaml

      - name: Deploy StorageMgmtServ with UsageMntrServ URL
        run: |
          echo "Deploying StorageMgmtServ..."
          sed "s|{{USAGE_MNTR_URL}}|${{ env.USAGE_MNTR_URL }}|g" StorageMgmtServ/storagemgmtserv-deployment.yaml | kubectl apply -f -
          kubectl apply -f StorageMgmtServ/storagemgmtserv-service.yaml

      - name: Deploy Ingress
        run: |
          echo "Deploying Ingress..."
          kubectl apply -f k8s/ingress.yaml

      - name: Get Ingress External IP
        id: ingress_url
        run: |
          echo "Fetching external IP for Ingress..."
          INGRESS_IP=$(kubectl get ingress microservices-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "INGRESS_IP=http://$INGRESS_IP" >> $GITHUB_ENV
          echo "::set-output name=ingress_url::$INGRESS_IP"

      - name: Log and Update PR with Deployed URLs
        run: |
          echo "Fetching Deployed Service URLs..."
          
          USAGE_MNTR_URL=$USAGE_MNTR_URL
          USER_ACC_MGMT_URL=$(kubectl get svc useraccmgmtserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          STORAGE_MGMT_URL=$(kubectl get svc storagemgmtserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          
          echo "::set-output name=usage_mntr_url::$USAGE_MNTR_URL"
          echo "::set-output name=user_acc_mgmt_url::$USER_ACC_MGMT_URL"
          echo "::set-output name=storage_mgmt_url::$STORAGE_MGMT_URL"
          
          echo "Deployed Service URLs:" > urls.log
          echo "UsageMntrServ: $USAGE_MNTR_URL" >> urls.log
          echo "UserAccMgmtServ: http://$USER_ACC_MGMT_URL" >> urls.log
          echo "StorageMgmtServ: http://$STORAGE_MGMT_URL" >> urls.log
          
          echo "Deployed Service URLs:"
          echo "UsageMntrServ: $USAGE_MNTR_URL"
          echo "UserAccMgmtServ: http://$USER_ACC_MGMT_URL"
          echo "StorageMgmtServ: http://$STORAGE_MGMT_URL"

          if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            COMMENT_BODY="### Deployed URLs\n- [UsageMntrServ]($USAGE_MNTR_URL)\n- [UserAccMgmtServ](http://$USER_ACC_MGMT_URL)\n- [StorageMgmtServ](http://$STORAGE_MGMT_URL)"
            echo "$COMMENT_BODY" | gh pr comment ${{ github.event.pull_request.number }} --body -
