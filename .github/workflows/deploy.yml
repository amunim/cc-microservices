name: Deploy Microservices to Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: gold-obelisk-445820-s5
      REGION: us-central1
      REPO_HOST: us-central1-docker.pkg.dev
      REPO_NAME: us-docker-repo

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Authenticate Docker with Artifact Registry
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPO_HOST }}

      - name: Build and Push Docker Images
        run: |
          echo "Building and pushing Docker images..."
          
          docker build -t ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/usagemntrserv ./UsageMntrServ
          docker push ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/usagemntrserv

          docker build -t ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/useraccmgmtserv ./UserAccMgmtServ
          docker push ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/useraccmgmtserv

          docker build -t ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/storagemgmtserv ./StorageMgmtServ
          docker push ${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/storagemgmtserv

  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: build_and_push  # Depends on the previous job

    env:
      PROJECT_ID: gold-obelisk-445820-s5
      REGION: us-central1
      REPO_HOST: us-central1-docker.pkg.dev
      REPO_NAME: us-docker-repo
      KUBECONFIG_PATH: /tmp/kubeconfig

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Kubernetes Access
        run: |
          gcloud container clusters get-credentials microservices-cluster --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Deploy Secrets to Kubernetes
        run: |
          kubectl create secret generic service-secrets \
            --from-literal=mongo-uri=${{ secrets.MONGO_URI }} \
            --from-literal=jwt-secret=${{ secrets.JWT_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy UsageMntrServ
        run: |
          sed "s|{{IMAGE}}|${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/usagemntrserv:latest|g" UsageMntrServ/usagemntrserv-deployment.yaml | kubectl apply -f -
          kubectl apply -f UsageMntrServ/usagemntrserv-service.yaml

      - name: Get UsageMntrServ URL
        id: usagemntrserv_url
        run: |
          USAGE_MNTR_URL=$(kubectl get svc usagemntrserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "USAGE_MNTR_URL=http://$USAGE_MNTR_URL" >> $GITHUB_ENV

      - name: Deploy UserAccMgmtServ
        run: |
          sed "s|{{IMAGE}}|${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/useraccmgmtserv:latest|g" UserAccMgmtServ/useraccmgmtserv-deployment.yaml | kubectl apply -f -
          kubectl apply -f UserAccMgmtServ/useraccmgmtserv-service.yaml

      - name: Deploy StorageMgmtServ with UsageMntrServ URL
        run: |
          sed "s|{{IMAGE}}|${{ env.REPO_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/storagemgmtserv:latest|g" StorageMgmtServ/storagemgmtserv-deployment.yaml | \
          sed "s|{{USAGE_MNTR_URL}}|${{ env.USAGE_MNTR_URL }}|g" | kubectl apply -f -
          kubectl apply -f StorageMgmtServ/storagemgmtserv-service.yaml

      - name: Deploy Ingress
        run: |
          kubectl apply -f k8s/ingress.yaml

  log_and_update:
    runs-on: ubuntu-latest
    needs: deploy_to_kubernetes  # Depends on deployment completion

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Log Deployed URLs and Update PR
        run: |
          USAGE_MNTR_URL=${{ env.USAGE_MNTR_URL }}
          USER_ACC_MGMT_URL=$(kubectl get svc useraccmgmtserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          STORAGE_MGMT_URL=$(kubectl get svc storagemgmtserv -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

          echo "::set-output name=usage_mntr_url::$USAGE_MNTR_URL"
          echo "::set-output name=user_acc_mgmt_url::$USER_ACC_MGMT_URL"
          echo "::set-output name=storage_mgmt_url::$STORAGE_MGMT_URL"

          echo "Deployed Service URLs:"
          echo "UsageMntrServ: $USAGE_MNTR_URL"
          echo "UserAccMgmtServ: http://$USER_ACC_MGMT_URL"
          echo "StorageMgmtServ: http://$STORAGE_MGMT_URL"

          if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            COMMENT_BODY="### Deployed URLs\n- [UsageMntrServ]($USAGE_MNTR_URL)\n- [UserAccMgmtServ](http://$USER_ACC_MGMT_URL)\n- [StorageMgmtServ](http://$STORAGE_MGMT_URL)"
            echo "$COMMENT_BODY" | gh pr comment ${{ github.event.pull_request.number }} --body -
